{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 53aabc1492589ff77083","webpack:///./src/App.es6","webpack:///./src/proponojs.js","webpack:///external \"aws-sdk\"","webpack:///external \"shortid\"","webpack:///./src/config/env_config.js"],"names":["exports","proponojs","require","env_config"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACtCAA,SAAQC,SAAR,GAAoB,mBAAAC,CAAQ,CAAR,CAApB;AACAF,SAAQG,UAAR,GAAqB,mBAAAD,CAAQ,CAAR,CAArB,C;;;;;;ACDA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gCAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;;;;;;AC9CA,qC;;;;;;ACAA,qC;;;;;;ACAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","file":"dist/proponojs.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"aws-sdk\"), require(\"shortid\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"aws-sdk\", \"shortid\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"proponojs\"] = factory(require(\"aws-sdk\"), require(\"shortid\"));\n\telse\n\t\troot[\"proponojs\"] = factory(root[\"aws-sdk\"], root[\"shortid\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 53aabc1492589ff77083","exports.proponojs = require('./proponojs.js');\nexports.env_config = require('./config/env_config.js');\n\n\n\n// WEBPACK FOOTER //\n// ./src/App.es6","const AWS = require('aws-sdk');\n\nconst shortid = require('shortid');\n\nclass ProponoJS {\n  constructor(config) {\n    this.config = config;\n    AWS.config.update(config);\n  }\n\n  publish(topic, message, cb) { // eslint-disable-line class-methods-use-this\n    const sns = new AWS.SNS();\n    const createParams = {\n      Name: topic,\n    };\n    sns.createTopic(createParams, (createErr, createData) => {\n      if (createErr) {\n        cb(createErr);\n      } else {\n        const topicArn = createData.TopicArn;\n\n        const body = {\n          id: shortid.generate(),\n          message,\n        };\n\n        const publishParams = {\n          Message: JSON.stringify(body),\n          TopicArn: topicArn,\n        };\n\n        sns.publish(publishParams, (publishErr, publishData) => {\n          if (publishErr) {\n            cb(publishErr);\n          } else {\n            cb(null, publishData);\n          }\n        });\n      }\n    });\n  }\n}\n\n// Export the class instance via a function call\nmodule.exports = function proponojs(config) {\n  return new ProponoJS(config);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/proponojs.js\n// module id = 1\n// module chunks = 0","module.exports = require(\"aws-sdk\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"aws-sdk\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"shortid\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"shortid\"\n// module id = 3\n// module chunks = 0","const accessKey = process.env.PROPONOJS_AWS_ACCESS_KEY_ID;\nconst secretKey = process.env.PROPONOJS_AWS_SECRET_KEY;\nconst queueRegion = process.env.PROPONOJS_QUEUE_REGION;\n\n// The following are the complete set of Propono configuration\n// parameters. These are not yet supported by ProponoJS\n//\n// const maxRetries = process.env.PROPONOJS_MAX_RETRIES;\n// const numMessages_per_poll = process.env.PROPONOJS_NUM_MESSAGES_PER_POLL;\n// const useIamProfile = process.env.PROPONOJS.USE_IAM_PROFILE;\n// const applicationName = process.env.PROPONOJS_APPLICATION_NAME;\n// const queueSuffix = process.env.PROPONOJS_QUEUE_SUFFIX;\n\nconst config = {\n  accessKeyId: accessKey,\n  secretAccessKey: secretKey,\n  region: queueRegion,\n};\n\nmodule.exports = config;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/config/env_config.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}