{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap fb438c205e1f850fb841","webpack:///./src/App.es6","webpack:///./src/proponojs.js","webpack:///external \"aws-sdk\"","webpack:///external \"sqs-consumer\"","webpack:///external \"shortid\"","webpack:///./src/config/env_config.js"],"names":["exports","proponojs","require","env_config"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACtCAA,SAAQC,SAAR,GAAoB,mBAAAC,CAAQ,CAAR,CAApB;AACAF,SAAQG,UAAR,GAAqB,mBAAAD,CAAQ,CAAR,CAArB,C;;;;;;ACDA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,UAAS;;AAET;AACA;AACA,aAAY;;AAEZ;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA,kBAAiB;AACjB;AACA,cAAa;AACb;AACA,UAAS;AACT;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;;AAEA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;;AAEA,uCAAsC;AACtC;AACA;AACA,cAAa,SAAS;AACtB;AACA;AACA,mBAAkB,SAAS;AAC3B;AACA;AACA;AACA,YAAW;AACX;AACA,wBAAuB,SAAS;AAChC;AACA;AACA,mCAAkC,SAAS;AAC3C,cAAa;AACb,YAAW;AACX,UAAS;AACT;AACA;AACA;;AAEA;AACA,eAAc,4BAA4B,GAAG,MAAM,EAAE,wBAAwB;AAC7E;AACA;;AAEA;AACA;AACA;AACA;;;;;;;AC5MA,qC;;;;;;ACAA,0C;;;;;;ACAA,qC;;;;;;ACAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"dist/proponojs.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"aws-sdk\"), require(\"sqs-consumer\"), require(\"shortid\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"aws-sdk\", \"sqs-consumer\", \"shortid\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"proponojs\"] = factory(require(\"aws-sdk\"), require(\"sqs-consumer\"), require(\"shortid\"));\n\telse\n\t\troot[\"proponojs\"] = factory(root[\"aws-sdk\"], root[\"sqs-consumer\"], root[\"shortid\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap fb438c205e1f850fb841","exports.proponojs = require('./proponojs.js');\nexports.env_config = require('./config/env_config.js');\n\n\n\n// WEBPACK FOOTER //\n// ./src/App.es6","const AWS = require('aws-sdk');\nconst Consumer = require('sqs-consumer');\n\nconst shortid = require('shortid');\n\nclass ProponoJS {\n  constructor(config) {\n    this.config = config;\n    AWS.config.update(config);\n    this.sns = new AWS.SNS();\n    this.sqs = new AWS.SQS();\n  }\n\n  publish(topic, message, cb) {\n    this.createSnsTopic(topic, (createErr, topicArn) => {\n      if (createErr) {\n        cb(createErr);\n      } else {\n        const body = {\n          id: shortid.generate(),\n          message,\n        };\n\n        const publishParams = {\n          Message: JSON.stringify(body),\n          TopicArn: topicArn,\n        };\n\n        this.sns.publish(publishParams, (publishErr, publishData) => {\n          if (publishErr) {\n            cb(publishErr);\n          } else {\n            cb(null, publishData);\n          }\n        });\n      }\n    });\n  }\n\n  listen(topic, processMessage) {\n    this.createTopicQueueAndSubscription(topic, (createErr, queueUrl) => {\n      if (createErr) {\n        throw createErr;\n      } else {\n        const app = Consumer.create({\n          queueUrl,\n          handleMessage: (message, done) => {\n            const body = JSON.parse(message.Body);\n            const payload = JSON.parse(body.Message);\n            processMessage(payload.message, done);\n          },\n          sqs: this.sqs,\n        });\n\n        // app.on('error', (err) => {\n        //   console.log(err.message);\n        // });\n\n        app.start();\n      }\n    });\n  }\n\n  createTopicQueueAndSubscription(topic, cb) {\n    this.createSnsTopic(topic, (createSnsErr, topicArn) => {\n      if (createSnsErr) {\n        cb(createSnsErr);\n      } else {\n        this.createSqsQueue(topic, (createSqsErr, queueUrl, queueArn) => {\n          if (createSqsErr) {\n            cb(createSqsErr);\n          } else {\n            this.subscribeSqsToSns(topicArn, queueArn, (subscribeErr) => {\n              if (subscribeErr) {\n                cb(subscribeErr);\n              } else {\n                this.setSqsPolicy(topicArn, queueUrl, queueArn, (policyErr) => {\n                  if (policyErr) {\n                    cb(policyErr);\n                  } else {\n                    cb(null, queueUrl);\n                  }\n                });\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n\n  createSnsTopic(topic, cb) {\n    const createParams = {\n      Name: topic,\n    };\n    this.sns.createTopic(createParams, (createErr, createData) => {\n      // console.log('Create Topic err: ' + JSON.stringify(createErr));\n      // console.log('Create Topic data: ' + JSON.stringify(createData));\n      if (createErr) {\n        cb(createErr);\n      } else {\n        cb(null, createData.TopicArn);\n      }\n    });\n  }\n\n  createSqsQueue(topic, cb) {\n    const params = { QueueName: this.queueName(topic) };\n    this.sqs.createQueue(params, (createErr, createData) => {\n      // console.log('Create Queue err: ' + JSON.stringify(createErr));\n      // console.log('Create Queue data: ' + JSON.stringify(createData));\n      if (createErr) {\n        cb(createErr);\n      } else {\n        this.getQueueAttributes(createData.QueueUrl, (getAttributesErr, queueArn) => {\n          if (getAttributesErr) {\n            cb(getAttributesErr);\n          } else {\n            cb(null, createData.QueueUrl, queueArn);\n          }\n        });\n      }\n    });\n  }\n\n  getQueueAttributes(queueUrl, cb) {\n    const params = {\n      QueueUrl: queueUrl,\n      AttributeNames: [\n        'QueueArn',\n      ],\n    };\n    this.sqs.getQueueAttributes(params, (getErr, getData) => {\n      if (getErr) {\n        cb(getErr);\n      } else {\n        // console.log('Get Queue data: ' + JSON.stringify(getData));\n        cb(null, getData.Attributes.QueueArn);\n      }\n    });\n  }\n\n  subscribeSqsToSns(topicArn, queueArn, cb) {\n    const params = {\n      Protocol: 'sqs',\n      TopicArn: topicArn,\n      Endpoint: queueArn,\n    };\n    this.sns.subscribe(params, (err) => {\n      if (err) {\n        cb(err);\n      } else {\n        cb();\n      }\n    });\n  }\n\n  setSqsPolicy(topicArn, queueUrl, queueArn, cb) {\n    const params = {\n      QueueUrl: queueUrl,\n      Attributes: {\n        Policy: JSON.stringify(this.generatePolicy(topicArn, queueArn)),\n      },\n    };\n    this.sqs.setQueueAttributes(params, (err) => {\n      if (err) {\n        cb(err);\n      } else {\n        cb();\n      }\n    });\n  }\n\n  generatePolicy(topicArn, queueArn) { // eslint-disable-line class-methods-use-this\n    return {\n      Version: '2008-10-17',\n      Id: `${queueArn}/SQSDefaultPolicy`,\n      Statement: [\n        {\n          Sid: `${queueArn}-Sid`,\n          Effect: 'Allow',\n          Principal: {\n            AWS: '*',\n          },\n          Action: 'SQS:*',\n          Resource: `${queueArn}`,\n          Condition: {\n            StringEquals: {\n              'aws:SourceArn': `${topicArn}`,\n            },\n          },\n        },\n      ],\n    };\n  }\n\n  queueName(topic) {\n    return `${this.config.applicationName}-${topic}${this.config.queueSuffix}`;\n  }\n}\n\n// Export the class instance via a function call\nmodule.exports = function proponojs(config) {\n  return new ProponoJS(config);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/proponojs.js\n// module id = 1\n// module chunks = 0","module.exports = require(\"aws-sdk\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"aws-sdk\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"sqs-consumer\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"sqs-consumer\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"shortid\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"shortid\"\n// module id = 4\n// module chunks = 0","const accessKey = process.env.PROPONOJS_AWS_ACCESS_KEY_ID;\nconst secretKey = process.env.PROPONOJS_AWS_SECRET_KEY;\nconst queueRegion = process.env.PROPONOJS_QUEUE_REGION;\nconst applicationName = process.env.PROPONOJS_APPLICATION_NAME;\nconst queueSuffix = process.env.PROPONOJS_QUEUE_SUFFIX;\n\n// The following are the complete set of Propono configuration\n// parameters. These are not yet supported by ProponoJS\n//\n// const maxRetries = process.env.PROPONOJS_MAX_RETRIES;\n// const numMessages_per_poll = process.env.PROPONOJS_NUM_MESSAGES_PER_POLL;\n// const useIamProfile = process.env.PROPONOJS.USE_IAM_PROFILE;\n// const applicationName = process.env.PROPONOJS_APPLICATION_NAME;\n// const queueSuffix = process.env.PROPONOJS_QUEUE_SUFFIX;\n\nconst config = {\n  accessKeyId: accessKey,\n  secretAccessKey: secretKey,\n  region: queueRegion,\n  applicationName,\n  queueSuffix,\n};\n\nmodule.exports = config;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/config/env_config.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}